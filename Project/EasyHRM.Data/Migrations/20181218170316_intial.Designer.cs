// <auto-generated />
using System;
using EasyHRM.Data.HRMdbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyHRM.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20181218170316_intial")]
    partial class intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyHRM.Core.DataModel.AllowanceEmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllowanceId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("EmployeeId");

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AllowanceEmployee");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.AllowanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowanceType")
                        .IsRequired();

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("IsDelete");

                    b.Property<bool>("IsValue");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.ToTable("Allowance");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.AllowanceTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowanceTypeName")
                        .IsRequired();

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("AllowanceType");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.AttendenceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttendenceDate");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("EmployeeId");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Reason");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendences");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.AwardModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwardTitle")
                        .IsRequired();

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("Date");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("Gift")
                        .IsRequired();

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Month");

                    b.Property<double>("Price");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Awards");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.CompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("CompanyName")
                        .IsRequired();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Currency")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Logo");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("Web")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.DepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.DesignationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("DepertmentId");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("DepertmentId");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName");

                    b.Property<string>("AccountNumber");

                    b.Property<double>("BasicSalary");

                    b.Property<string>("Branch");

                    b.Property<string>("CV");

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<int>("DegisnationId");

                    b.Property<int>("DepertmentId");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Gender");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime>("JoiningDate");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("NationalId");

                    b.Property<string>("Other");

                    b.Property<string>("PermanentAddress");

                    b.Property<string>("PresentAddress");

                    b.Property<DateTime>("ResignDate");

                    b.Property<string>("SWIFTCode");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("DegisnationId");

                    b.HasIndex("DepertmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.EmployeePaySlipModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AllowanceTotal");

                    b.Property<double>("BasicSalary");

                    b.Property<DateTime>("CreateDate");

                    b.Property<double>("DeductionTotal");

                    b.Property<int>("EmployeeId");

                    b.Property<bool>("IsDelete");

                    b.Property<double>("NetSalary");

                    b.Property<int>("PaySlipId");

                    b.Property<string>("Status");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PaySlipId");

                    b.ToTable("EmployeePaySlip");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.HolidayModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Day")
                        .IsRequired();

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Month")
                        .IsRequired();

                    b.Property<string>("Occesion")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.LeaveApplicationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("EmployeeId");

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime>("LeaveDate");

                    b.Property<int>("LeaveTypeId");

                    b.Property<string>("Reason")
                        .IsRequired();

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveApplication");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.LeaveEmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("EmployeeId");

                    b.Property<bool>("IsDelete");

                    b.Property<int>("LeaveGroupId");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveGroupId");

                    b.ToTable("LeaveEmployee");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.LeaveGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasualLeave");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("HalfDay");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("LeaveGroupName")
                        .IsRequired();

                    b.Property<int>("Maternity");

                    b.Property<int>("Others");

                    b.Property<int>("SickLeave");

                    b.Property<int>("UnPaid");

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("LeaveGroup");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.LeaveTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("LeaveTypeName")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("LeaveType");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.NoticeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Message")
                        .IsRequired();

                    b.Property<string>("Subject")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Notices");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.PaySlipAllowanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowanceName")
                        .IsRequired();

                    b.Property<string>("AllowanceType")
                        .IsRequired();

                    b.Property<double>("Amount");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("EmployeePaySlipId");

                    b.Property<bool>("IsDelete");

                    b.Property<bool>("IsValue");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.HasIndex("EmployeePaySlipId");

                    b.ToTable("PaySlipAllowance");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.PaySlipModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Month")
                        .IsRequired();

                    b.Property<DateTime>("PaymentDate");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("PaySlip");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Role")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.AllowanceEmployeeModel", b =>
                {
                    b.HasOne("EasyHRM.Core.DataModel.AllowanceModel", "Allowance")
                        .WithMany()
                        .HasForeignKey("AllowanceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EasyHRM.Core.DataModel.EmployeeModel", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.AttendenceModel", b =>
                {
                    b.HasOne("EasyHRM.Core.DataModel.EmployeeModel", "EmployeeModel")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.AwardModel", b =>
                {
                    b.HasOne("EasyHRM.Core.DataModel.EmployeeModel", "EmployeeModel")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.DesignationModel", b =>
                {
                    b.HasOne("EasyHRM.Core.DataModel.DepartmentModel", "DepertmentModel")
                        .WithMany("Designations")
                        .HasForeignKey("DepertmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.EmployeeModel", b =>
                {
                    b.HasOne("EasyHRM.Core.DataModel.DesignationModel", "DesignationModel")
                        .WithMany()
                        .HasForeignKey("DegisnationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EasyHRM.Core.DataModel.DepartmentModel", "DepertmentModel")
                        .WithMany()
                        .HasForeignKey("DepertmentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.EmployeePaySlipModel", b =>
                {
                    b.HasOne("EasyHRM.Core.DataModel.EmployeeModel", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EasyHRM.Core.DataModel.PaySlipModel", "PaySlip")
                        .WithMany()
                        .HasForeignKey("PaySlipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.LeaveApplicationModel", b =>
                {
                    b.HasOne("EasyHRM.Core.DataModel.EmployeeModel", "EmployeeModel")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EasyHRM.Core.DataModel.LeaveTypeModel", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.LeaveEmployeeModel", b =>
                {
                    b.HasOne("EasyHRM.Core.DataModel.EmployeeModel", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EasyHRM.Core.DataModel.LeaveGroupModel", "LeaveGroup")
                        .WithMany()
                        .HasForeignKey("LeaveGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyHRM.Core.DataModel.PaySlipAllowanceModel", b =>
                {
                    b.HasOne("EasyHRM.Core.DataModel.EmployeePaySlipModel", "EmployeePaySlipModel")
                        .WithMany("PaySlipAllowances")
                        .HasForeignKey("EmployeePaySlipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
